name: CI/CD Workflow with Pylint and Pytest

on:
  push:
    branches:
      - main  # Trigger on push to the main branch

jobs:
  lint:
    runs-on: windows-latest  # Specify the OS to run the job

    steps:
      - name: Checkout code
        uses: actions/checkout@v2  # Checkout the repository code

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'  # Set the Python version

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Install pylint for linting

      - name: Run pylint
        run: |
          $env:PYTHONPATH = (Get-Location).Path
          pylint **/*.py  # Lint all Python files in the repository

  test:
    runs-on: windows-latest  # Specify the OS to run the job
    needs: lint  # Ensure linting completes before running tests

    steps:
      - name: Checkout code
        uses: actions/checkout@v2  # Checkout the repository code

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'  # Set the Python version

      - name: Install dependencies for test
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Install dependencies from requirements.txt

      - name: Set PYTHONPATH
        run: |
          echo "PYTHONPATH=$(pwd)/src" >> $GITHUB_ENV

      - name: Start MLflow server
        run: |
          nohup mlflow server --backend-store-uri sqlite:///mlflow.db --default-artifact-root ./mlruns --host 0.0.0.0 --port 8000 &
  
      - name: Run tests with Pytest
        run: |
          pytest tests  # Run tests using pytest, stop after first failure

  deploy:
    runs-on: windows-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Build Docker image
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/joblib-diabetes:latest .

    - name: Push Docker image
      run: docker push ${{ secrets.DOCKER_USERNAME }}/joblib-diabetes:latest