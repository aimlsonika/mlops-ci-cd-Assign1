name: CI/CD Workflow with Pylint and Pytest

on:
  push:
    branches:
      - main

jobs:
  lint:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run pylint
        run: |
          $env:PYTHONPATH = (Get-Location).Path
          pylint **/*.py || true

  test:
    runs-on: windows-latest
    needs: lint
    if: ${{ github.event.inputs.skip_tests != 'true' }}  # Only run tests if skip_tests is not true

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies for tests
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install DVC
        run: |
          python -m pip install dvc

      - name: Pull data with DVC
        run: |
          dvc pull data/diabetes.csv  # Fetch the data          

      - name: Print PYTHONPATH
        run: |
          echo $env:PYTHONPATH          

      - name: Add src to PYTHONPATH
        run: |
          $env:PYTHONPATH = (Get-Location).Path + "\src"
          echo "PYTHONPATH=$env:PYTHONPATH"  # Output PYTHONPATH for debugging

      #- name: Start MLflow server
      #  run: |
      #    nohup mlflow server --backend-store-uri sqlite:///mlflow.db --default-artifact-root ./mlruns --host 0.0.0.0 --port 8000 &

      - name: Start MLflow server
        run: |
          mlflow server --backend-store-uri sqlite:///mlflow.db --default-artifact-root ./mlruns --host 127.0.0.1 --port 5001 &
          sleep 10  # Wait for server to start

      - name: Wait for MLflow server to be ready
        run: |
          $url = "http://127.0.0.1:5001/api/2.0/mlflow/experiments/list"
          $isReady = $false
          while (-not $isReady) {
            try {
              $response = Invoke-RestMethod -Uri $url -Method Get -ErrorAction Stop
              $isReady = $true
            }
            catch {
              Write-Host "Waiting for MLflow server to start..."
              Start-Sleep -Seconds 5
            }
          }

      - name: Verify Python and MLflow installation
        run: |
          python --version
          pip show mlflow

      - name: Create mlruns folder if not exists
        run: |
          if (-not (Test-Path "./mlruns")) {
            New-Item -ItemType Directory -Path "./mlruns"
            }
      - name: Run tests with PYTHONPATH
        run: |
          $env:PYTHONPATH = "$(Get-Location)\src"
          pytest src/tests --disable-warnings
